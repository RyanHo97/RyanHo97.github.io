import{_ as s,o as a,c as o,V as l}from"./chunks/framework.7ae304b1.js";const h=JSON.parse('{"title":"Rust语言","description":"","frontmatter":{},"headers":[],"relativePath":"blog/rust/rust.md","filePath":"blog/rust/rust.md","lastUpdated":1684751288000}'),e={name:"blog/rust/rust.md"},t=l(`<h1 id="rust语言" tabindex="-1">Rust语言 <a class="header-anchor" href="#rust语言" aria-label="Permalink to &quot;Rust语言&quot;">​</a></h1><h2 id="一、安装" tabindex="-1">一、安装 <a class="header-anchor" href="#一、安装" aria-label="Permalink to &quot;一、安装&quot;">​</a></h2><p><a href="https://www.rust-lang.org/zh-CN/learn/get-started" target="_blank" rel="noreferrer">https://www.rust-lang.org/zh-CN/learn/get-started</a></p><p>下载 RUSTUP-INIT.EXE（64位）工具</p><p>默认安装在C盘</p><p>自定义安装路径的方式：</p><ol><li><p>在需要安装的目录下分别建两个文件夹，名为.cargo与.rustup</p></li><li><p>配置环境变量:<strong>右键此电脑-&gt;属性-&gt;高级系统设置-&gt;环境变量</strong></p><p>编辑&quot;<strong>Path</strong>&quot;变量，新增&quot;<strong>%RUSTUP_HOME%</strong>&quot;与&quot;<strong>%CARGO_HOME%</strong>&quot;</p></li><li><p>开始安装Rust</p></li><li><p>要检查您是否安装了 <strong>Rust</strong> 和 <strong>Cargo</strong>，可以在终端中运行：</p></li></ol><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">cargo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--version</span></span></code></pre></div><p>卸载方式：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">rustup</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">self</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">uninstall</span></span></code></pre></div><h3 id="二、cargo-rust-的构建工具和包管理器" tabindex="-1">二、Cargo：Rust 的构建工具和包管理器 <a class="header-anchor" href="#二、cargo-rust-的构建工具和包管理器" aria-label="Permalink to &quot;二、Cargo：Rust 的构建工具和包管理器&quot;">​</a></h3><p>您在安装 Rustup 时，也会安装 Rust 构建工具和包管理器的最新稳定版，即 Cargo。Cargo 可以做很多事情：</p><ul><li><code>cargo build</code> 可以构建项目</li><li><code>cargo run</code> 可以运行项目</li><li><code>cargo test</code> 可以测试项目</li><li><code>cargo doc</code> 可以为项目构建文档</li><li><code>cargo publish</code> 可以将库发布到 <a href="https://crates.io/" target="_blank" rel="noreferrer">crates.io</a>。</li></ul><p>要检查您是否安装了 Rust 和 Cargo，可以在终端中运行：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">cargo --version</span></span></code></pre></div><h2 id="三、hello-world" tabindex="-1">三、Hello, World! <a class="header-anchor" href="#三、hello-world" aria-label="Permalink to &quot;三、Hello, World!&quot;">​</a></h2><p>既然安装好了 Rust，是时候来编写第一个 Rust 程序了。当学习一门新语言的时候，使用该语言在屏幕上打印 <code>Hello, world!</code> 是一项传统，我们将沿用这一传统！</p><p>首先创建一个存放 Rust 代码的目录。Rust 并不关心代码的存放位置，不过对于本书的练习和项目来说，我们建议你在 home 目录中创建 <em>projects</em> 目录，并将你的所有项目存放在这里。</p><p>打开终端并输入如下命令创建 <em>projects</em> 目录，并在 <em>projects</em> 目录中为 “Hello, world!” 项目创建一个目录。</p><p>对于 Linux、macOS 和 Windows PowerShell，输入：</p><div class="language-console"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mkdir</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">~/projects</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">~/projects</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mkdir</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">hello_world</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">hello_world</span></span></code></pre></div><p>对于 Windows CMD，输入：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> mkdir </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%USERPROFILE%\\projects</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> cd /d </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%USERPROFILE%\\projects</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> mkdir hello_world</span></span>
<span class="line"><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> cd hello_world</span></span></code></pre></div>`,23),n=[t];function p(r,c,i,d,u,C){return a(),o("div",null,n)}const y=s(e,[["render",p]]);export{h as __pageData,y as default};
