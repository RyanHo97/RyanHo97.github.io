import{_ as s,o as a,c as n,V as l}from"./chunks/framework.7ae304b1.js";const d=JSON.parse('{"title":"CSS 简介","description":"","frontmatter":{},"headers":[],"relativePath":"blog/css/01css-简介.md","filePath":"blog/css/01css-简介.md","lastUpdated":1684751288000}'),o={name:"blog/css/01css-简介.md"},e=l(`<h1 id="css-简介" tabindex="-1">CSS 简介 <a class="header-anchor" href="#css-简介" aria-label="Permalink to &quot;CSS 简介&quot;">​</a></h1><hr><h2 id="你需要具备的知识" tabindex="-1">你需要具备的知识 <a class="header-anchor" href="#你需要具备的知识" aria-label="Permalink to &quot;你需要具备的知识&quot;">​</a></h2><p>在继续学习之前，你需要对下面的知识有基本的了解：</p><ul><li>HTML / XHTML</li></ul><h2 id="什么是-css" tabindex="-1">什么是 CSS? <a class="header-anchor" href="#什么是-css" aria-label="Permalink to &quot;什么是 CSS?&quot;">​</a></h2><ul><li>CSS 指层叠样式表 (<strong>C</strong>ascading <strong>S</strong>tyle <strong>S</strong>heets)</li><li>样式定义<strong>如何显示</strong> HTML 元素</li><li>样式通常存储在<strong>样式表</strong>中</li><li>把样式添加到 HTML 4.0 中，是为了<strong>解决内容与表现分离的问题</strong></li><li><strong>外部样式表</strong>可以极大提高工作效率</li><li>外部样式表通常存储在 <strong>CSS 文件</strong>中</li><li>多个样式定义可<strong>层叠</strong>为一个</li></ul><h2 id="css-实例" tabindex="-1">CSS 实例 <a class="header-anchor" href="#css-实例" aria-label="Permalink to &quot;CSS 实例&quot;">​</a></h2><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">body</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">background-color</span><span style="color:#89DDFF;">:#</span><span style="color:#A6ACCD;">d0e4fe</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#FFCB6B;">h1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">orange</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">text-align</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">center</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#FFCB6B;">p</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">font-family</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Times New Roman</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">font-size</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">20px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>样式表定义如何显示 HTML 元素，就像 HTML 中的字体标签和颜色属性所起的作用那样。样式通常保存在外部的 .css 文件中。我们只需要编辑一个简单的 CSS 文档就可以改变所有页面的布局和外观。</p>`,10),p=[e];function t(c,r,i,D,C,y){return a(),n("div",null,p)}const h=s(o,[["render",t]]);export{d as __pageData,h as default};
